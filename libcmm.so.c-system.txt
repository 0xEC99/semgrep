112-    uVar3 = 0;
113-    if ((param_1 != 0) && (param_2 != (char *)0x0)) {
114-      iVar2 = inet_addr(param_2);
115:      util_execSystem("oal_util_setProcLanAddr","echo \"%s %u,\" > %s",param_1,iVar2,
116-                      "/proc/net/conntract_LocalAddr");
117-    }
118-  }
119---
120-  }
121-  else {
122:    snprintf(acStack_218,0x200,"vconfig rem %s.%d",local_18,param_2 & 0xffff);
123-    util_execSystem("util_delVLANIntf",acStack_218);
124-    uVar1 = 0;
125-  }
--
127---
128-  }
129-  else {
130:    snprintf(acStack_210,0x200,"vconfig add %s %d",param_1,param_2);
131-    util_execSystem("util_createVLANIntf",acStack_210);
132:    snprintf(acStack_210,0x200,"vconfig set_flag %s.%d 1 1",param_1,param_2);
133-    util_execSystem("util_createVLANIntf",acStack_210);
134-    uVar1 = 0;
135-  }
--
170-{
171-  undefined4 in_a3;
172-  
173:  util_execSystem("oal_sys_unsetTZ","echo \"\" > %s","/etc/TZ",in_a3,&_gp_1);
174-  return 0;
175-}
176-
--
203-      cdbg_printf(8,"oal_sys_readMacFlash",0x779,"online, randMacSuffix %d.",uVar2);
204-      iVar1 = cnet_macToStr(&local_34,param_1,1);
205-      if (iVar1 == 0) {
206:        util_execSystem("oal_sys_readMacFlash","ifconfig eth0 hw ether %s",param_1);
207-        return 0;
208-      }
209-      uVar3 = 0x77d;
--
238-oal_intf_enableIntf(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)
239-
240-{
241:  util_execSystem("oal_intf_enableIntf","ifconfig %s up",param_1,param_4,&_gp_1);
242-  return 0;
243-}
244-
--
246-oal_intf_disableIntf(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)
247-
248-{
249:  util_execSystem("oal_intf_disableIntf","ifconfig %s down",param_1,param_4,&_gp_1);
250-  return 0;
251-}
252-
--
254-  
255-  iVar1 = strncmp(param_3,"0.0.0.0",7);
256-  if (iVar1 == 0) {
257:    util_execSystem("oal_intf_setIntf","ifconfig %s %s up",param_1,param_2);
258-  }
259-  else {
260:    util_execSystem("oal_intf_setIntf","ifconfig %s %s netmask %s up",param_1,param_2,param_3);
261-  }
262-  oal_util_setProcLanAddr(param_1,param_2);
263-  return 0;
--
265-        if (iVar1 == 0) {
266-          return 0;
267-        }
268:        util_execSystem("oal_intf_setIfMac","ifconfig %s down",param_1);
269:        util_execSystem("oal_intf_setIfMac","ifconfig %s hw ether %s up",param_1,param_2);
270-        return 0;
271-      }
272-      close(iVar1);
--
274-    cdbg_printf(8,"prepareDropbear",0x11a,"get OID_USER_CFG error.\n");
275-  }
276-  FUN_00099e00(auStack_d8);
277:  util_execSystem("prepareDropbear","dropbearkey -t rsa -f %s",
278-                  "/var/tmp/dropbear/dropbear_rsa_host_key");
279:  util_execSystem("prepareDropbear","dropbearkey -t dss -f %s",
280-                  "/var/tmp/dropbear/dropbear_dss_host_key");
281:  util_execSystem("prepareDropbear","dropbear -p %d -r %s -d %s -A %s",0x16,
282-                  "/var/tmp/dropbear/dropbear_rsa_host_key",
283-                  "/var/tmp/dropbear/dropbear_dss_host_key","/var/tmp/dropbear/dropbearpwd");
284-  os_threadExit(0);
--
286-                param_1);
287-    return 0x120c;
288-  }
289:  util_execSystem("oal_app_checkTcpPortStat","netstat -lntp > %s",acStack_160);
290-  __stream = fopen(acStack_160,"r");
291-  if (__stream == (FILE *)0x0) {
292:    cdbg_printf(8,"oal_app_checkTcpPortStat",0x205,"open file[%s] failed.",acStack_160);
293---
294-
295-{
296-  oal_dhcps_updateDhcpsCfg(0x25,0,0,2);
297:  util_execSystem("oal_startDhcps","dhcpd %s","/var/tmp/dconf/udhcpd.conf");
298-  return 0;
299-}
300-
301---
302:           "upnpd  -L  %s  -W  %s  -en  %d -P %s  -nat %d -port %d  -url  %s  -ma  %s  -mn  %s  -mv  %s  -desc  %s &\n"
303-           ,&DAT_000c0a1c,param_1,param_3 & 0xff,param_9,param_2 & 0xff,(uint)param_10,param_4,
304-           param_5,param_6,param_7,param_8,&_gp_1);
305-  system(acStack_208);
--
310-  else {
311-    if (local_20 != 0) {
312-LAB_0009c548:
313:      util_execSystem("oal_addStaticRoute","ip route add to %s/%s via %s dev %s table %s",&local_30,
314-                      iVar4,param_1 + 0x2c,&local_40,local_20);
315-      util_execSystem("oal_addStaticRoute","ip route flush cache");
316-      return;
317-    }
318:    util_execSystem("oal_addStaticRoute","route add -host %s dev %s",param_1 + 0x2c,&local_40);
319-  }
320-  puVar3 = &local_40;
321-  if (*(char *)(param_1 + 0x2c) == '\0') {
322---
323-    puVar3 = (undefined4 *)(param_1 + 0x2c);
324:    pcVar2 = "route add -net %s netmask %s gw %s dev %s";
325-  }
326-  util_execSystem("oal_addStaticRoute",pcVar2,&local_30,iVar4,puVar3);
327-  return;
--
331-  cnet_addrStrToNum(local_20,&local_38);
332-  cnet_addrNumToStr(local_38 & local_34,&local_30);
333-  if (param_3 == 0) {
334:    util_execSystem("oal_delStaticRoute","route del -net %s netmask %s",&local_30,local_20);
335-  }
336-  else {
337:    util_execSystem("oal_delStaticRoute","ip route del %s/%s table %s",&local_30,local_20,param_3);
338-    util_execSystem("oal_delStaticRoute","ip route flush cache");
339-  }
340-  if ((param_2 != '\0') && (param_3 == 0)) {
341:    util_execSystem("oal_delStaticRoute","route del -host %s",param_1 + 0x2c);
342-  }
343-  return;
344-}
--
346-    iVar1 = oal_route_getDefaultGatewayHost();
347-    if (iVar1 != 0) {
348-      cnet_addrNumToStr(iVar1,auStack_28);
349:      util_execSystem("oal_setDefaultRoute","route del -host %s dev %s",auStack_28,param_1);
350-    }
351-    util_execSystem("oal_setDefaultRoute","route del default");
352-  }
--
354-  if (iVar1 != 0) {
355-    iVar1 = oal_route_defaultGatewayNeedHost(param_1,param_2);
356-    if ((iVar1 == 1) && (iVar1 = oal_route_ifHasHost(param_1,param_2), iVar1 == 0)) {
357:      util_execSystem("oal_setDefaultRoute","route add -host %s dev %s",param_2,param_1);
358-    }
359:    util_execSystem("oal_setDefaultRoute","route add default gw %s dev %s",param_2,param_1);
360-    iVar1 = ifHasDefaultGW();
361-    if (iVar1 == 0) {
362:      util_execSystem("oal_setDefaultRoute","route add default gw %s dev %s",param_2,param_1);
363-      iVar1 = ifHasDefaultGW();
364-      if (iVar1 == 0) {
365:        util_execSystem("oal_setDefaultRoute","route add default gw %s dev %s",param_2,param_1);
366-        goto LAB_0009d308;
367-      }
368-    }
--
370-LAB_0009d308:
371-  iVar1 = oal_route_ifHasTheSameDestHost(param_2);
372-  if (iVar1 != 0) {
373:    util_execSystem("oal_setDefaultRoute","route del -host %s dev %s",param_2,param_1);
374-  }
375-  return;
376-}
--
378-  cnet_addrNumToStr(param_2,&local_28);
379-  iVar1 = oal_ipt_addDnsRules(&local_18,&local_28);
380-  if (iVar1 == 0) {
381:    util_execSystem("oal_net_addDNS","echo \"nameserver %s\" > %s",&local_28,"/var/tmp/resolv.conf")
382-    ;
383-  }
384-  return iVar1;
--
387-  cnet_addrNumToStr(param_2,&local_20);
388-  if (param_3 != (char *)0x0) {
389-    util_execSystem("oal_dmz_addDmzHost",
390:                    "iptables -t nat -I PREROUTING_DMZ -d %s \t\t-j DNAT --to-destination %s",
391-                    param_3,&local_20);
392-    util_execSystem("oal_dmz_addDmzHost",
393:                    "iptables -A FORWARD_DMZ -i %s -d %s -m conntrack --ctstate DNAT -j ACCEPT",
394-                    param_1,&local_20);
395-    util_execSystem("oal_dmz_addDmzHost",
396:                    "iptables -t nat -I PREROUTING_DMZ 1 -p icmp \t--icmp-type echo-request -d %s -j ACCEPT"
397-                    ,param_3);
398-  }
399---
--
401-  cnet_addrNumToStr(param_2,&local_20);
402-  if (param_3 != (char *)0x0) {
403-    util_execSystem("oal_dmz_delDmzHost",
404:                    "iptables -t nat -D PREROUTING_DMZ -d %s \t\t-j DNAT --to-destination %s",
405-                    param_3,&local_20);
406-    util_execSystem("oal_dmz_delDmzHost",
407:                    "iptables -D FORWARD_DMZ -i %s -d %s -m conntrack --ctstate DNAT -j ACCEPT",
408-                    param_1,&local_20);
409-    util_execSystem("oal_dmz_delDmzHost",
410:                    "iptables -t nat -D PREROUTING_DMZ -p icmp \t--icmp-type echo-request -d %s -j ACCEPT"
411-                    ,param_3);
412-  }
413---
--
415-    iVar1 = strcmp(__s1,"TCP");
416-    if ((iVar1 == 0) || (iVar1 = strcmp(__s1,"TCP or UDP"), iVar1 == 0)) {
417-      util_execSystem("oal_vs_addVirtualServer",
418:                      "iptables -t nat -A PREROUTING_VS -d %s -p tcp \t\t--dport %d:%d -j DNAT --to-destination %s:%d-%d"
419-                      ,&local_28,*(undefined4 *)(param_2 + 4),*(undefined4 *)(param_2 + 8),
420-                      param_2 + 0x1f,*(undefined4 *)(param_2 + 0xc),*(undefined4 *)(param_2 + 0x10))
421-      ;
422-      util_execSystem("oal_vs_addVirtualServer",
423:                      "iptables -A FORWARD_VS -i %s -p tcp \t\t--dport %d:%d -d %s -j ACCEPT",
424-                      param_1,*(undefined4 *)(param_2 + 0xc),*(undefined4 *)(param_2 + 0x10),
425-                      param_2 + 0x1f);
426---
--
428-      return 0;
429-    }
430-    util_execSystem("oal_vs_addVirtualServer",
431:                    "iptables -t nat -A PREROUTING_VS -d %s -p udp \t\t--dport %d:%d -j DNAT --to-destination %s:%d-%d"
432-                    ,&local_28,*(undefined4 *)(param_2 + 4),*(undefined4 *)(param_2 + 8),
433-                    param_2 + 0x1f,*(undefined4 *)(param_2 + 0xc),*(undefined4 *)(param_2 + 0x10));
434-    util_execSystem("oal_vs_addVirtualServer",
435:                    "iptables -A FORWARD_VS -i %s -p udp \t\t--dport %d:%d -d %s -j ACCEPT",param_1,
436-                    *(undefined4 *)(param_2 + 0xc),*(undefined4 *)(param_2 + 0x10),param_2 + 0x1f);
437-    return 0;
438---
--
440-    iVar1 = strcmp(__s1,"TCP");
441-    if ((iVar1 == 0) || (iVar1 = strcmp(__s1,"TCP or UDP"), iVar1 == 0)) {
442-      util_execSystem("oal_vs_delVirtualServer",
443:                      "iptables -t nat -D PREROUTING_VS -d %s -p tcp \t\t--dport %d:%d -j DNAT --to-destination %s:%d-%d"
444-                      ,&local_28,*(undefined4 *)(param_2 + 4),*(undefined4 *)(param_2 + 8),
445-                      param_2 + 0x1f,*(undefined4 *)(param_2 + 0xc),*(undefined4 *)(param_2 + 0x10))
446-      ;
447-      util_execSystem("oal_vs_delVirtualServer",
448:                      "iptables -D FORWARD_VS -i %s -p tcp \t\t--dport %d:%d -d %s -j ACCEPT",
449-                      param_1,*(undefined4 *)(param_2 + 0xc),*(undefined4 *)(param_2 + 0x10),
450-                      param_2 + 0x1f);
451---
--
453-      return 0;
454-    }
455-    util_execSystem("oal_vs_delVirtualServer",
456:                    "iptables -t nat -D PREROUTING_VS -d %s -p udp \t\t--dport %d:%d -j DNAT --to-destination %s:%d-%d"
457-                    ,&local_28,*(undefined4 *)(param_2 + 4),*(undefined4 *)(param_2 + 8),
458-                    param_2 + 0x1f,*(undefined4 *)(param_2 + 0xc),*(undefined4 *)(param_2 + 0x10));
459-    util_execSystem("oal_vs_delVirtualServer",
460:                    "iptables -D FORWARD_VS -i %s -p udp \t\t--dport %d:%d -d %s -j ACCEPT",param_1,
461-                    *(undefined4 *)(param_2 + 0xc),*(undefined4 *)(param_2 + 0x10),param_2 + 0x1f);
462-    return 0;
463---
--
465-        do {
466-          if (*(short *)puVar3 != 0) {
467-            util_execSystem("oal_pt_addPortTrigger",
468:                            "iptables -A FORWARD_PT -i br+ -p %s -j TRIGGER --trigger-type out --trigger-proto %s --trigger-match %d-%d --trigger-relate %d-%d"
469-                            ,&local_48,&local_44,*(undefined4 *)(param_2 + 4),
470-                            *(undefined4 *)(param_2 + 4),*(short *)puVar3,
471---
--
475-        util_execSystem("oal_pt_addPortTrigger",
476-                        "iptables -A FORWARD_PT -j TRIGGER --trigger-type in");
477-        util_execSystem("oal_pt_addPortTrigger",
478:                        "iptables -t nat -A PREROUTING_PT -i %s -j TRIGGER \t\t--trigger-type dnat",
479-                        param_1);
480-        iVar1 = 0;
481---
--
483-        do {
484-          if (*(short *)puVar3 != 0) {
485-            util_execSystem("oal_pt_delPortTrigger",
486:                            "iptables -D FORWARD_PT -i br+ -p %s -j TRIGGER --trigger-type out --trigger-proto %s --trigger-match %d-%d --trigger-relate %d-%d"
487-                            ,&local_48,&local_44,*(undefined4 *)(param_2 + 4),
488-                            *(undefined4 *)(param_2 + 4),*(short *)puVar3,
489---
--
493-        util_execSystem("oal_pt_delPortTrigger",
494-                        "iptables -D FORWARD_PT -j TRIGGER --trigger-type in");
495-        util_execSystem("oal_pt_delPortTrigger",
496:                        "iptables -t nat -D PREROUTING_PT -i %s -j TRIGGER \t\t--trigger-type dnat",
497-                        param_1);
498-        iVar1 = 0;
499---
--
525---
526-        pcVar3 = pcVar3 + iVar1;
527-      }
528:      sprintf(pcVar3," -j SNAT --to-source %s",param_2);
529:      util_execSystem("oal_forward_natLoopBack","%s",acStack_128);
530-    }
531-  }
532-  return 0;
533---
534-        pcVar9 = "DROP";
535-      }
536:      sprintf(pcVar11,"-j %s",pcVar9);
537-      util_execSystem("setRule",acStack_234);
538-      if (*(char *)(param_1 + 0x15) == '\0') {
539-        if (param_3 == 0) {
540-          return 0;
541---
542:        pcVar9 = "iptables -%c FWRULE -i br+ -m mac --mac-source %s -j %s";
543-      }
544-      sprintf(acStack_234,pcVar9,uVar8,iVar2,pcVar11);
545-      util_execSystem("setRule",acStack_234);
--
549---
550-      }
551-      iVar2 = iVar2 + 1;
552:      sprintf(pcVar11 + iVar4,"-j %s",pcVar9);
553-      util_execSystem("setRule",acStack_234);
554-    } while (iVar2 != 3);
555-    return 0;
--
557---
558-      pcVar9 = "DROP";
559-    }
560:    sprintf(pcVar11,"-j %s",pcVar9);
561-    util_execSystem("setRule",acStack_234);
562-    uVar3 = uVar3 + 1;
563-    if ((*(char *)(param_1 + 0x16) != '\x03') || (2 < (int)uVar3)) {
--
565---
566-    uVar1 = 0x41;
567-  }
568:  sprintf(acStack_108,"iptables -%c PCDROP -m mac --mac-source %s -j DROP",uVar1,param_2);
569-  util_execSystem("oal_fw_setParentCtrlDefaultAction",acStack_108);
570-  return 0;
571-}
--
592-
593---
594-  
595:  pcVar1 = "iptables -t filter -D FORWARD -i %s \t\t\t-m conntrack --ctstate NEW -j ACCEPT";
596-  if (param_2 == '\0') {
597-    util_execSystem("oal_fw_setSpiRule",
598:                    "iptables -t filter -D FORWARD -i %s \t\t\t-m conntrack --ctstate NEW -j ACCEPT"
599-                    ,param_1);
600:    pcVar1 = "iptables -t filter -A FORWARD -i %s \t\t\t-m conntrack --ctstate NEW -j ACCEPT";
601-  }
602-  util_execSystem("oal_fw_setSpiRule",pcVar1,param_1);
603-  return 0;
--
643---
644-    _Var2 = getpid();
645-    sprintf(acStack_e8,"/var/tmp/brx%d.lst",_Var2);
646:    sprintf(acStack_a8,"brctl show > %s",acStack_e8);
647-    util_execSystem("oal_fw_ebtables",acStack_a8);
648-    __stream = fopen(acStack_e8,"r");
649-    if (__stream == (FILE *)0x0) {
650-      return;
651---
652-        if ((char)local_110 != '\0') {
653:          sprintf(acStack_a8,"ebtables -D FORWARD --logical-in %s --logical-out %s -j ACCEPT",
654-                  &local_110,&local_110);
655-          util_execSystem("oal_fw_ebtables",acStack_a8);
656-          if (param_2 != 0) {
657:            sprintf(acStack_a8,"ebtables -I FORWARD 1 --logical-in %s --logical-out %s -j ACCEPT",
658-                    &local_110,&local_110);
659-            util_execSystem("oal_fw_ebtables",acStack_a8);
660-          }
--
663---
664-    fclose(__stream);
665-    uVar5 = 0;
666:    sprintf(acStack_a8,"rm -f %s",acStack_e8);
667-    util_execSystem("oal_fw_ebtables",acStack_a8);
668-    uVar4 = param_2;
669-  }
670-  else {
671---
672-  if ((char)local_110 != '\0') {
673:    sprintf(acStack_a8,"ebtables -D FORWARD --logical-in %s --logical-out %s -j ACCEPT",&local_110,
674-            &local_110);
675-    util_execSystem("oal_fw_ebtables",acStack_a8);
676-    if ((uVar4 != 0) && (uVar5 == 0)) {
677:      sprintf(acStack_a8,"ebtables -I FORWARD 1 --logical-in %s --logical-out %s -j ACCEPT",
678-              &local_110,&local_110);
679-      util_execSystem("oal_fw_ebtables",acStack_a8);
680-    }
--
700-      goto LAB_000a19e0;
701-    }
702-    oal_intf_waitIntfExists(pcVar7,"oal_wan_initPPPOnDemand");
703:    util_execSystem("oal_wan_initPPPOnDemand","pppd pppoe %s demand idle %d unit %d\t&",pcVar7,
704-                    *(int *)(param_1 + 0x8c) * 0x3c,iVar2);
705-  }
706-  else {
--
744-  snprintf(acStack_214,0x200,"bpalogin ");
745---
746-    sVar2 = strlen(acStack_214);
747:    snprintf(acStack_214 + sVar2,0x200 - sVar2," authdomain \"%s\" ",param_1 + 0x324);
748-  }
749-  util_execSystem("oal_wan_initBpa",acStack_214);
750-  return 0;
--
812---
813-  
814-  memset(acStack_50,0,0x40);
815:  sprintf(acStack_50,"ifconfig %s mtu %d",param_1,param_2);
816-  util_execSystem("oal_wan_setIfMtu",acStack_50);
817-  oal_ipt_delMssRules(param_1,param_2);
818-  oal_ipt_addMssRules(param_1,param_2);
--
832-      util_execSystem("oal_wan_initIpoa",acStack_1130);
833-    }
834-    else {
835:      cdbg_printf(8,"oal_wan_initIpoa",0x80d,"You specifief a invalid %s",param_2 + 0x2f);
836---
837-  
838-  iVar1 = strncmp("0.0.0.0","0.0.0.0",7);
839-  if (iVar1 == 0) {
840:    util_execSystem("oal_intf_setIntf","ifconfig %s %s up",param_1,"0.0.0.0");
841-  }
842-  else {
843:    util_execSystem("oal_intf_setIntf","ifconfig %s %s netmask %s up",param_1,"0.0.0.0","0.0.0.0");
844-  }
845-  oal_util_setProcLanAddr(param_1,"0.0.0.0");
846-  return 0;
--
848-  }
849-  else {
850-    util_findSystemProc("wanType",1,0,0,auStack_18);
851:    util_execSystem("oal_wanTypeDetect","wanType %s",param_1);
852-    uVar1 = 0;
853-  }
854-  return uVar1;
--
871---
872-  memset(acStack_58,0,0x50);
873-  oal_ipt_setDDoSRules(0,&DAT_000d575c);
874:  sprintf(acStack_58,"rm -f %s","/var/tmp/dosHost");
875-  util_execSystem("ddos_clearAll",acStack_58);
876-  return 0;
877-}
--
880-  else {
881-    pcVar1 = "rmmod";
882-  }
883:  util_execSystem("setupModules","%s %s/%s.ko",pcVar1,"/lib/modules/kmdir/kernel/net",param_1);
884-  return;
885-}
886-
--
904-
905-{
906-  FUN_000a4dd8();
907:  util_execSystem("oal_startDynDns","dyndns %s","/var/tmp/dconf/dyndns.conf");
908-  return 0;
909-}
910-
--
912-
913-{
914-  FUN_000a4bcc();
915:  util_execSystem("oal_startNoipDns","noipdns %s","/var/tmp/dconf/noipdns.conf");
916-  return 0;
917-}
918-
--
920-
921-{
922-  FUN_000a48e0();
923:  util_execSystem("oal_startCmxDns","cmxdns %s","/var/tmp/dconf/cmxdns.conf");
924-  return 0;
925-}
926-
--
963-
964-{
965-  util_execSystem("oal_ipt_addBridgeIsolationRules",
966:                  "iptables -t filter -I BRIDGE_ISOLATION -i br+ -o %s -j DROP",param_1);
967-  util_execSystem("oal_ipt_addBridgeIsolationRules",
968:                  "iptables -t filter -I BRIDGE_ISOLATION -i %s -o br+ -j DROP",param_1);
969-                    // WARNING: Treating indirect jump as call
970-  util_execSystem("oal_ipt_addBridgeIsolationRules",
971:                  "iptables -t filter -I BRIDGE_ISOLATION -i %s -o %s -j ACCEPT",param_1,param_1);
972-  return;
973-}
974---
--
976-
977-{
978-  util_execSystem("oal_ipt_delBridgeIsolationRules",
979:                  "iptables -t filter -D BRIDGE_ISOLATION -i br+ -o %s -j DROP",param_1);
980-  util_execSystem("oal_ipt_delBridgeIsolationRules",
981:                  "iptables -t filter -D BRIDGE_ISOLATION -i %s -o br+ -j DROP",param_1);
982-                    // WARNING: Treating indirect jump as call
983-  util_execSystem("oal_ipt_delBridgeIsolationRules",
984:                  "iptables -t filter -D BRIDGE_ISOLATION -i %s -o %s -j ACCEPT",param_1,param_1);
985-  return;
986-}
987---
--
1005-{
1006-  if (param_2 != '\0') {
1007-    util_execSystem("oal_ipt_addNatRules",
1008:                    "iptables -t nat -A POSTROUTING -o %s -j MASQUERADE --mode fullcone\n",param_1);
1009-  }
1010-                    // WARNING: Treating indirect jump as call
1011:  util_execSystem("oal_ipt_addNatRules","iptables -t nat -A POSTROUTING -o %s -j MASQUERADE\n",
1012-                  param_1);
1013-  return;
1014-}
--
1017-{
1018-  if (param_2 != '\0') {
1019-    util_execSystem("oal_ipt_delNatRules",
1020:                    "iptables -t nat -D POSTROUTING -o %s -j MASQUERADE --mode fullcone\n",param_1);
1021-  }
1022-                    // WARNING: Treating indirect jump as call
1023:  util_execSystem("oal_ipt_delNatRules","iptables -t nat -D POSTROUTING -o %s -j MASQUERADE\n",
1024-                  param_1);
1025-  return;
1026-}
--
1029-  int iVar1;
1030-  
1031-  iVar1 = util_execSystem("oal_ipt_addDnsRules",
1032:                          "iptables -t nat -A PREROUTING -d %s -p tcp --dport 53 \t\t-j DNAT --to-destination %s\n"
1033-                          ,param_1,param_2);
1034-  if (iVar1 == 0) {
1035-                    // WARNING: Treating indirect jump as call
1036-    util_execSystem("oal_ipt_addDnsRules",
1037:                    "iptables -t nat -A PREROUTING -d %s -p udp --dport 53 \t\t-j DNAT --to-destination %s\n"
1038-                    ,param_1,param_2);
1039-    return;
1040---
--
1042-  int iVar1;
1043-  
1044-  iVar1 = util_execSystem("oal_ipt_delDnsRules",
1045:                          "iptables -t nat -D PREROUTING -d %s -p tcp --dport 53 \t\t-j DNAT --to-destination %s\n"
1046-                          ,param_1,param_2);
1047-  if (iVar1 == 0) {
1048-                    // WARNING: Treating indirect jump as call
1049-    util_execSystem("oal_ipt_delDnsRules",
1050:                    "iptables -t nat -D PREROUTING -d %s -p udp --dport 53 \t\t-j DNAT --to-destination %s\n"
1051-                    ,param_1,param_2);
1052-    return;
1053---
--
1055-
1056-{
1057-  util_execSystem("oal_ipt_addMssRules",
1058:                  "iptables -t filter -I FORWARD 1 -o %s -p tcp --tcp-flags SYN,RST SYN \t\t-j TCPMSS --set-mss %d"
1059-                  ,param_1,param_2 + -0x28);
1060-                    // WARNING: Treating indirect jump as call
1061-  util_execSystem("oal_ipt_addMssRules",
1062:                  "iptables -t filter -I FORWARD 1 -i %s -p tcp --tcp-flags SYN,RST SYN \t\t-j TCPMSS --set-mss %d"
1063-                  ,param_1,param_2 + -0x28);
1064-  return;
1065---
1066-  memset(acStack_120,0,0x80);
1067:  snprintf(acStack_120,0x7f,"%s -p tcp -m tcp --tcp-flags SYN,RST SYN -j TCPMSS --set-mss",local_20)
1068-  ;
1069-  util_execSystem("oal_ipt_delMssRules","iptables -S -t filter > /var/tmp/delMss");
1070-  __stream = fopen("/var/tmp/delMss","r+");
--
1074-    } while (pcVar2 == (char *)0x0);
1075-    fclose(__stream);
1076-    if (pcVar2 != (char *)0x0) {
1077:      util_execSystem("oal_ipt_delMssRules","iptables -t filter -D FORWARD -o %s",pcVar2);
1078:      util_execSystem("oal_ipt_delMssRules","iptables -t filter -D FORWARD -i %s",pcVar2);
1079-    }
1080-  }
1081-  return;
--
1129-{
1130-  util_execSystem("oal_wlan_StartART","mkdir /tmp/dut");
1131-  util_execSystem("oal_wlan_StartART","mkdir /tmp/d");
1132:  util_execSystem("oal_wlan_StartART","tftp -g %s -r dut_images.tar.gz -l /tmp/d/dut_images.tar.gz",
1133-                  param_1);
1134:  util_execSystem("oal_wlan_StartART","tftp -g %s -r progmodels.tar.gz -l /tmp/d/progmodels.tar.gz",
1135-                  param_1);
1136-  util_execSystem("oal_wlan_StartART","tar -zxf /tmp/d/dut_images.tar.gz -C /tmp/d/");
1137:  util_execSystem("oal_wlan_StartART","tftp -g %s -r dutserver -l /tmp/dut/dutserver",param_1);
1138:  util_execSystem("oal_wlan_StartART","tftp -g %s -r mtlk.ko -l /tmp/dut/mtlk.ko",param_1);
1139-  util_execSystem("oal_wlan_StartART","chmod +x /tmp/dut/dutserver");
1140-  util_execSystem("oal_wlan_StartART",
1141-                  "echo \"/tmp/dut/dutserver /tmp/dut/mtlk.ko &\" >/tmp/dut/run_dut.sh");
--
1149-  sprintf(acStack_20,"%08d",param_2);
1150-  iVar1 = strcmp("Up",(char *)(param_1 + 0x468));
1151-  if (iVar1 == 0) {
1152:    util_execSystem("oal_wlan_ra_startWPSByPIN","iwpriv %s set WscConfMode=%d",param_1,7);
1153:    util_execSystem("oal_wlan_ra_startWPSByPIN","iwpriv %s set WscPinCode=%s",param_1,acStack_20);
1154:    util_execSystem("oal_wlan_ra_startWPSByPIN","iwpriv %s set WscMode=%d",param_1,1);
1155:    util_execSystem("oal_wlan_ra_startWPSByPIN","iwpriv %s set WscGetConf=%d",param_1,1);
1156-  }
1157-  return 0;
1158-}
--
1160-  }
1161-  iVar1 = strcmp("Up",param_1 + 0x468);
1162-  if (iVar1 == 0) {
1163:    util_execSystem("oal_wlan_ra_setAclCfg","iwpriv %s set AccessPolicy=%d",param_2,local_28);
1164:    util_execSystem("oal_wlan_ra_setAclCfg","iwpriv %s set ACLClearAll=1",param_2);
1165-  }
1166-  for (; pcVar2 != (char *)0x0; pcVar2 = *(char **)(pcVar2 + 0x34)) {
1167-    iVar1 = strcmp(pcVar2 + 0x13,param_2);
--
1169-      }
1170-      iVar1 = strcmp("Up",(char *)&local_38);
1171-      if ((iVar1 == 0) && (*pcVar2 == '\x01')) {
1172:        util_execSystem("oal_wlan_ra_setAclCfg","iwpriv %s set ACLAddEntry=\"%s\"",param_2,
1173-                        pcVar2 + 1);
1174-      }
1175-    }
--
1184-        DAT_000efc91 = cVar2;
1185-      }
1186-      DAT_00105ff8 = (uint)bVar1;
1187:      util_execSystem("oal_wlan_ra_setCountryRegion","iwpriv %s set CountryRegion=%d",param_1);
1188-      return 0;
1189-    }
1190-    iVar7 = iVar6 * 5;
--
1192-    if (iVar1 != 0) {
1193-      return 0;
1194-    }
1195:    util_execSystem("oal_wlan_ra_setSec","iwpriv %s set AuthMode=%s",param_2,acStack_1ac);
1196:    util_execSystem("oal_wlan_ra_setSec","iwpriv %s set EncrypType=%s",param_2,acStack_1b8);
1197:    util_execSystem("oal_wlan_ra_setSec","iwpriv %s set IEEE8021X=0",param_2);
1198-    if (local_1c0 == 2) {
1199-      if (*(char *)(param_1 + 0x160) != '\0') {
1200-        FUN_000a856c(auStack_f4,param_1 + 0x160);
1201:        util_execSystem("oal_wlan_ra_setSec","iwpriv %s set Key1=%s",param_2,auStack_f4);
1202-      }
1203-      if (*(char *)(param_1 + 0x1f0) != '\0') {
1204-        FUN_000a856c(auStack_f4,param_1 + 0x1f0);
1205:        util_execSystem("oal_wlan_ra_setSec","iwpriv %s set Key2=%s",param_2,auStack_f4);
1206-      }
1207-      if (*(char *)(param_1 + 0x280) != '\0') {
1208-        FUN_000a856c(auStack_f4,param_1 + 0x280);
1209:        util_execSystem("oal_wlan_ra_setSec","iwpriv %s set Key3=%s",param_2,auStack_f4);
1210-      }
1211-      if (*(char *)(param_1 + 0x310) != '\0') {
1212-        FUN_000a856c(auStack_f4,param_1 + 0x310);
1213:        util_execSystem("oal_wlan_ra_setSec","iwpriv %s set Key4=%s",param_2,auStack_f4);
1214-      }
1215-    }
1216:    util_execSystem("oal_wlan_ra_setSec","iwpriv %s set DefaultKeyID=%d",param_2,uVar2);
1217-    if (local_1c0 - 1U < 2) {
1218-      return 0;
1219-    }
1220-    FUN_000a856c(auStack_158,param_5);
1221:    util_execSystem("oal_wlan_ra_setSec","iwpriv %s set SSID=%s",param_2,auStack_158);
1222:    util_execSystem("oal_wlan_ra_setSec","iwpriv %s set RekeyInterval=%d",param_2,
1223-                    *(undefined4 *)(param_1 + 0xd0));
1224-    if ((local_1bc - 6U < 2) || (local_1bc == 9)) {
1225-      FUN_000a856c(auStack_f4,param_1 + 0x8d);
1226:      util_execSystem("oal_wlan_ra_setSec","iwpriv %s set WPAPSK=%s",param_2,auStack_f4);
1227-      return 0;
1228-    }
1229-    iVar1 = oal_wlan_getBrNamebyIfName(param_4,param_4,auStack_198);
--
1232-          pcVar3 = "killall -q  -SIGINT rtinicapd";
1233-        }
1234-        util_execSystem("oal_wlan_ra_setSec",pcVar3);
1235:        util_execSystem("oal_wlan_ra_setSec","iwpriv %s set IEEE8021X=0",param_2);
1236:        util_execSystem("oal_wlan_ra_setSec","iwpriv %s set SSID=%s",param_2,auStack_158);
1237:        util_execSystem("oal_wlan_ra_setSec","iwpriv %s set RADIUS_Server=%s",param_2,param_1 + 0xd4
1238-                       );
1239:        util_execSystem("oal_wlan_ra_setSec","iwpriv %s set RADIUS_Port=%d",param_2,
1240-                        *(undefined4 *)(param_1 + 0x114));
1241-        FUN_000a856c(auStack_f4,param_1 + 0x118);
1242:        util_execSystem("oal_wlan_ra_setSec","iwpriv %s set RADIUS_Key=%s",param_2,auStack_f4);
1243:        util_execSystem("oal_wlan_ra_setSec","iwpriv %s set EAPifname=%s",param_2,auStack_198);
1244:        util_execSystem("oal_wlan_ra_setSec","iwpriv %s set own_ip_addr=%s",param_2,auStack_178);
1245:        util_execSystem("oal_wlan_ra_setSec","iwpriv %s set SSID=%s",param_2,auStack_158);
1246-        sleep(4);
1247-        iVar1 = strcmp("2.4GHz",(char *)(param_4 + 1099));
1248-        if (iVar1 == 0) {
--
1258-  iVar2 = strcmp("Up",(char *)(param_1 + 0xb31));
1259-  if (iVar2 == 0) {
1260-    iVar2 = param_1 + 0xa89;
1261:    util_execSystem("oal_wlan_ra_setWlanWdsCfg","iwpriv %s set ApCliEnable=%d",iVar2,0);
1262-    pcVar3 = (char *)(param_1 + 0xa99);
1263-    if (*(char *)(param_1 + 0xb40) == '\0') {
1264-      pcVar3 = "00:00:00:00:00:00";
1265-    }
1266:    util_execSystem("oal_wlan_ra_setWlanWdsCfg","iwpriv %s set ApCliBssid=%s",iVar2,pcVar3);
1267:    util_execSystem("oal_wlan_ra_setWlanWdsCfg","iwpriv %s set ApCliAuthMode=%s",iVar2,acStack_16c);
1268:    util_execSystem("oal_wlan_ra_setWlanWdsCfg","iwpriv %s set ApCliEncrypType=%s",iVar2,acStack_178
1269-                   );
1270-    FUN_000a856c(auStack_f0,param_1 + 0xaf0);
1271-    if (iVar1 == 2) {
1272:      util_execSystem("oal_wlan_ra_setWlanWdsCfg","iwpriv %s set ApCliDefaultKeyID=%d",iVar2,uVar4);
1273:      util_execSystem("oal_wlan_ra_setWlanWdsCfg","iwpriv %s set ApCliKey1=%s",iVar2,auStack_f0);
1274:      util_execSystem("oal_wlan_ra_setWlanWdsCfg","iwpriv %s set ApCliKey2=%s",iVar2,auStack_f0);
1275:      util_execSystem("oal_wlan_ra_setWlanWdsCfg","iwpriv %s set ApCliKey3=%s",iVar2,auStack_f0);
1276:      util_execSystem("oal_wlan_ra_setWlanWdsCfg","iwpriv %s set ApCliKey4=%s",iVar2,auStack_f0);
1277-    }
1278-    if (iVar1 - 3U < 2) {
1279-      FUN_000a856c(auStack_f0,param_1 + 0xaf0);
1280:      util_execSystem("oal_wlan_ra_setWlanWdsCfg","iwpriv %s set ApCliWPAPSK=%s",iVar2,auStack_f0);
1281-    }
1282-    iVar1 = curMultimode();
1283-    if (iVar1 == 3) {
1284:      util_execSystem("oal_wlan_ra_setWlanWdsCfg","iwpriv %s set MACRepeaterEn=1",iVar2);
1285:      util_execSystem("oal_wlan_ra_setWlanWdsCfg","iwpriv %s set WscConfMode=1",iVar2);
1286-    }
1287-    FUN_000a856c(auStack_158,param_1 + 0xaab);
1288:    util_execSystem("oal_wlan_ra_setWlanWdsCfg","iwpriv %s set ApCliSsid=%s",iVar2,auStack_158);
1289:    util_execSystem("oal_wlan_ra_setWlanWdsCfg","iwpriv %s set ApCliEnable=%d",iVar2,1);
1290-  }
1291-  return 0;
1292-}
--
1294-  
1295-  iVar1 = strcmp("Up",(char *)(param_1 + 0x468));
1296-  if (iVar1 == 0) {
1297:    util_execSystem("oal_wlan_ra_startWPSByPBC","iwpriv %s set WscConfMode=%d",param_1,7);
1298:    util_execSystem("oal_wlan_ra_startWPSByPBC","iwpriv %s set WscMode=%d",param_1,2);
1299:    util_execSystem("oal_wlan_ra_startWPSByPBC","iwpriv %s set WscGetConf=%d",param_1,1);
1300-  }
1301-  return 0;
1302-}
--
1304-  int iVar1;
1305-  
1306-  iVar1 = param_2 + 1;
1307:  util_execSystem("oal_wlan_ra_setMSSIDAdvCfg","iwpriv %s set TxPower=%d",iVar1,
1308-                  *(undefined4 *)(param_1 + 0x830));
1309:  util_execSystem("oal_wlan_ra_setMSSIDAdvCfg","iwpriv %s set BeaconPeriod=%d",iVar1,
1310-                  *(undefined4 *)(param_1 + 0x838));
1311:  util_execSystem("oal_wlan_ra_setMSSIDAdvCfg","iwpriv %s set RTSThreshold=%d",iVar1,
1312-                  *(undefined4 *)(param_1 + 0x83c));
1313:  util_execSystem("oal_wlan_ra_setMSSIDAdvCfg","iwpriv %s set FragThreshold=%d",iVar1,
1314-                  *(undefined4 *)(param_1 + 0x840));
1315:  util_execSystem("oal_wlan_ra_setMSSIDAdvCfg","iwpriv %s set DtimPeriod=%d",iVar1,
1316-                  *(undefined4 *)(param_1 + 0x844));
1317:  util_execSystem("oal_wlan_ra_setMSSIDAdvCfg","iwpriv %s set HtGi=%d",iVar1,
1318-                  *(undefined *)(param_1 + 0x849));
1319:  util_execSystem("oal_wlan_ra_setMSSIDAdvCfg","iwpriv %s set WmmCapable=%d",iVar1,
1320-                  *(undefined *)(param_1 + 0x834));
1321-                    // WARNING: Treating indirect jump as call
1322:  util_execSystem("oal_wlan_ra_setMSSIDAdvCfg","iwpriv %s set NoForwarding=%d",iVar1,
1323-                  *(undefined *)(param_2 + 0x33));
1324-  return;
1325-}
--
1327-void FUN_000ab9c4(int param_1)
1328-
1329-{
1330:  util_execSystem("oal_wlan_ra_setWlanAdvCfg","iwpriv %s set TxPower=%d",param_1,
1331-                  *(undefined4 *)(param_1 + 0x830));
1332:  util_execSystem("oal_wlan_ra_setWlanAdvCfg","iwpriv %s set BeaconPeriod=%d",param_1,
1333-                  *(undefined4 *)(param_1 + 0x838));
1334:  util_execSystem("oal_wlan_ra_setWlanAdvCfg","iwpriv %s set RTSThreshold=%d",param_1,
1335-                  *(undefined4 *)(param_1 + 0x83c));
1336:  util_execSystem("oal_wlan_ra_setWlanAdvCfg","iwpriv %s set FragThreshold=%d",param_1,
1337-                  *(undefined4 *)(param_1 + 0x840));
1338:  util_execSystem("oal_wlan_ra_setWlanAdvCfg","iwpriv %s set DtimPeriod=%d",param_1,
1339-                  *(undefined4 *)(param_1 + 0x844));
1340:  util_execSystem("oal_wlan_ra_setWlanAdvCfg","iwpriv %s set HtGi=%d",param_1,
1341-                  *(undefined *)(param_1 + 0x849));
1342:  util_execSystem("oal_wlan_ra_setWlanAdvCfg","iwpriv %s set HideSSID=%d",param_1,
1343-                  1 - (uint)*(byte *)(param_1 + 0x82c));
1344:  util_execSystem("oal_wlan_ra_setWlanAdvCfg","iwpriv %s set WmmCapable=%d",param_1,
1345-                  *(undefined *)(param_1 + 0x834));
1346-                    // WARNING: Treating indirect jump as call
1347:  util_execSystem("oal_wlan_ra_setWlanAdvCfg","iwpriv %s set NoForwarding=%d",param_1,
1348-                  *(undefined *)(param_1 + 0x848));
1349-  return;
1350-}
--
1367-  local_68 = 0;
1368-  util_findSystemProc("wlNetlinkTool",0,auStack_58,"wlNetlinkTool",&local_68);
1369-  if (local_68 == 0) {
1370:    util_execSystem("oal_wlan_ra_initEnd","%s","wlNetlinkTool &");
1371-  }
1372-  else {
1373-    puts("wlNetlinkTool is already there. ");
--
1375-        puts("DUT is Not Caled. Wireless Lan should not be used.");
1376-        iVar1 = strcmp("2.4GHz",pcVar3);
1377-        if (iVar1 == 0) {
1378:          util_execSystem("oal_wlan_ra_initEnd","iwpriv %s set SKUEnable=0",param_1);
1379-        }
1380-        local_68 = 0;
1381-        util_findSystemProc("ated_tp",0,0,0,&local_68);
1382-        if (local_68 == 0) {
1383:          util_execSystem("oal_wlan_ra_initEnd","%s","ated_tp &");
1384-        }
1385:        util_execSystem("oal_wlan_ra_initEnd","%s","echo 0 > /proc/tplink/led_wlan_24G");
1386:        util_execSystem("oal_wlan_ra_initEnd","%s","echo 0 > /proc/tplink/cal_status");
1387:        util_execSystem("oal_wlan_ra_initEnd","%s","echo 0 > /proc/tplink/led_wlan_5G");
1388-        return 0;
1389-      }
1390-      iVar1 = strcmp("2.4GHz",pcVar3);
1391-      if (iVar1 == 0) {
1392:        util_execSystem("oal_wlan_ra_initEnd","%s","killall -q wscd");
1393:        pcVar3 = "wscd -i %s -m 1 -w /var/tmp/wsc_upnp/ &";
1394-      }
1395-      else {
1396:        util_execSystem("oal_wlan_ra_initEnd","%s","killall -q wscd_5G");
1397:        pcVar3 = "wscd_5G -i %s -m 1 -w /var/tmp/wsc_upnp_5G/ &";
1398-      }
1399-      util_execSystem("oal_wlan_ra_initEnd",pcVar3,param_1);
1400-      iVar1 = FUN_000abb20(param_1);
--
1404-    if ((iVar1 == 3) || (iVar1 = curMultimode(param_1), iVar1 == 2)) {
1405-      param_3 = getReMaxStaNum(param_1);
1406-    }
1407:    util_execSystem("oal_wlan_ra_setStaNum","iwpriv %s set MaxStaNum=%d",param_2,param_3);
1408-    return 0;
1409-  }
1410-  printf("MaxStaNum is %d, range(%d~%d)\n",param_3,0,0x40);
--
1420-     ) {
1421-    return 0;
1422-  }
1423:  util_execSystem("oal_wlan_ra_openVap","ifconfig %s up",param_2);
1424-  iVar1 = strcmp(param_2,param_1);
1425-  if (iVar1 == 0) {
1426-    iVar1 = strcmp("2.4GHz",param_1 + 1099);
1427-    if (iVar1 == 0) {
1428:      util_execSystem("oal_wlan_ra_openVap","%s","echo 1 > /proc/tplink/led_wlan_24G");
1429:      util_execSystem("oal_wlan_ra_openVap","%s","killall -q wscd");
1430:      pcVar2 = "wscd -i %s -m 1 -w /var/tmp/wsc_upnp/ &";
1431-    }
1432-    else {
1433:      util_execSystem("oal_wlan_ra_openVap","%s","echo 1 > /proc/tplink/led_wlan_5G");
1434:      util_execSystem("oal_wlan_ra_openVap","%s","killall -q wscd_5G");
1435:      pcVar2 = "wscd_5G -i %s -m 1 -w /var/tmp/wsc_upnp_5G/ &";
1436-    }
1437-    util_execSystem("oal_wlan_ra_openVap",pcVar2,param_2);
1438-    FUN_000abb20(param_1);
--
1442-  if (iVar1 == 0) {
1443-    iVar1 = curMultimode();
1444-    if (iVar1 == 3) {
1445:      util_execSystem("oal_wlan_ra_openVap","iwpriv %s set MACRepeaterEn=1",param_1);
1446:      util_execSystem("oal_wlan_ra_openVap","iwpriv %s set WscConfMode=1",param_1);
1447-    }
1448:    util_execSystem("oal_wlan_ra_openVap","iwpriv %s set ApCliEnable=1",param_1);
1449-  }
1450-  iVar1 = curMultimode();
1451-  if (iVar1 == 5) {
--
1453-  if (iVar1 != 0) {
1454-    iVar3 = oal_tc_setQdiscForIntf(param_2,0,2,3);
1455-    if (iVar3 == 0) {
1456:      util_execSystem("oal_wlan_ra_closeVap","ifconfig %s down",param_2);
1457-      iVar1 = strcmp(param_2,param_1);
1458-      if (iVar1 == 0) {
1459-        iVar1 = strcmp("2.4GHz",param_1 + 1099);
1460-        if (iVar1 == 0) {
1461:          util_execSystem("oal_wlan_ra_closeVap","%s","echo 0 > /proc/tplink/led_wlan_24G");
1462:          util_execSystem("oal_wlan_ra_closeVap","%s","killall -q wscd");
1463-          pcVar2 = "killall -q  -SIGINT rt2860apd";
1464-        }
1465-        else {
1466:          util_execSystem("oal_wlan_ra_closeVap","%s","echo 0 > /proc/tplink/led_wlan_5G");
1467:          util_execSystem("oal_wlan_ra_closeVap","%s","killall -q wscd_5G");
1468-          pcVar2 = "killall -q  -SIGINT rtinicapd";
1469-        }
1470:        util_execSystem("oal_wlan_ra_closeVap","%s",pcVar2);
1471-      }
1472-      pcVar4 = cstr_strncpy;
1473-      pcVar2 = "Disabled";
--
1475-  undefined auStack_78 [104];
1476-  
1477-  FUN_000a856c(auStack_78,param_1 + 0x11);
1478:  util_execSystem("oal_wlan_ra_setMSSIDBasicCfg","iwpriv %s set SSID=%s",param_1 + 1,auStack_78);
1479:  util_execSystem("oal_wlan_ra_setMSSIDBasicCfg","iwpriv %s set HideSSID=%d",param_1 + 1,
1480-                  1 - (uint)*(byte *)(param_1 + 0x32));
1481-  return;
1482-}
--
1484-          iVar4 = strcmp("Up",__s2);
1485-          if (iVar4 == 0) {
1486-            FUN_000a856c(auStack_88,param_1 + 0xb59);
1487:            util_execSystem("oal_wlan_ra_updateWlanMssidEntryCfg","iwpriv %s set SSID=%s",iVar1,
1488-                            auStack_88);
1489:            util_execSystem("oal_wlan_ra_updateWlanMssidEntryCfg","ifconfig %s down",iVar1);
1490-            iVar4 = strcmp("5GHz",(char *)(param_1 + 1099));
1491-            if (iVar4 == 0) {
1492:              util_execSystem("oal_wlan_ra_updateWlanMssidEntryCfg","ifconfig %s down",param_1);
1493-              sleep(5);
1494:              util_execSystem("oal_wlan_ra_updateWlanMssidEntryCfg","ifconfig %s up",param_1);
1495-            }
1496:            util_execSystem("oal_wlan_ra_updateWlanMssidEntryCfg","ifconfig %s up",iVar1);
1497-          }
1498-          local_20 = FUN_000ac18c(param_1,iVar1,*(undefined4 *)(param_1 + 0xb88));
1499-          uVar3 = 0x117e;
--
1501-          uVar3 = 7;
1502-        }
1503-        DAT_000efc94 = uVar2;
1504:        util_execSystem("oal_wlan_ra_setWlanWpsCfg","iwpriv %s set WscConfMode=%d",param_1,uVar3);
1505-      }
1506-    }
1507-    iVar1 = strcmp("Configured",(char *)(param_1 + 0x859));
--
1509-    if (iVar1 != 0) {
1510-      uVar3 = 1;
1511-    }
1512:    util_execSystem("oal_wlan_ra_setWlanWpsCfg","iwpriv %s set WscConfStatus=%d",param_1,uVar3);
1513:    util_execSystem("oal_wlan_ra_setWlanWpsCfg","iwpriv %s set WscVendorPinCode=%08d",param_1,
1514-                    *(undefined4 *)(param_1 + 0x854));
1515:    util_execSystem("oal_wlan_ra_setWlanWpsCfg","iwpriv %s set WscSetupLock=%d",param_1,
1516-                    *(undefined *)(param_1 + 0x858));
1517-  }
1518-  iVar1 = FUN_000ad658(param_1);
--
1520-    cdbg_perror("oal_wlan_ra_setWlanBasicCfg",0xa3e,1);
1521-    return 1;
1522-  }
1523:  util_execSystem("oal_wlan_ra_setWlanBasicCfg","iwpriv %s set CountryCode=%c%c_NOCOUNTRY",param_1,
1524-                  local_c4,local_c3);
1525-  iVar2 = FUN_000a82dc(param_1);
1526-  if (iVar2 != 0) {
--
1528-      }
1529-    }
1530-  }
1531:  util_execSystem("oal_wlan_ra_setWlanBasicCfg","iwpriv %s set WirelessMode=%d",param_1,uVar3);
1532-  __s2 = (char *)(param_1 + 0x456);
1533-  iVar2 = strcmp("80M",__s2);
1534-  if ((iVar2 == 0) ||
1535-     ((iVar2 = strcmp("Auto",__s2), iVar2 == 0 && (iVar2 = strcmp("ac",pcVar4), iVar2 == 0)))) {
1536-    iVar2 = strcmp("5GHz",(char *)(param_1 + 1099));
1537-    if (iVar2 == 0) {
1538:      util_execSystem("oal_wlan_ra_setWlanBasicCfg","iwpriv %s set HtBw=%d",param_1,1);
1539:      util_execSystem("oal_wlan_ra_setWlanBasicCfg","iwpriv %s set HtBssCoex=%d",param_1,0);
1540-      uVar3 = 1;
1541-      goto LAB_000aeb50;
1542-    }
1543-  }
1544-  else {
1545-    iVar2 = strcmp("20M",__s2);
1546:    util_execSystem("oal_wlan_ra_setWlanBasicCfg","iwpriv %s set HtBw=%d",param_1,iVar2 != 0);
1547:    util_execSystem("oal_wlan_ra_setWlanBasicCfg","iwpriv %s set HtBssCoex=%d",param_1,0);
1548-    iVar2 = strcmp("5GHz",(char *)(param_1 + 1099));
1549-    if (iVar2 == 0) {
1550-      uVar3 = 0;
1551-LAB_000aeb50:
1552:      util_execSystem("oal_wlan_ra_setWlanBasicCfg","iwpriv %s set VhtBw=%d",param_1,uVar3);
1553-    }
1554-  }
1555-  if (*(char *)(param_1 + 0x28) == '\0') {
1556:    util_execSystem("oal_wlan_ra_setWlanBasicCfg","iwpriv %s set Channel=%d",param_1,
1557-                    *(undefined4 *)(param_1 + 0x24));
1558-    iVar2 = strcmp("2.4GHz",(char *)(param_1 + 1099));
1559-    if (iVar2 == 0) {
--
1561-    }
1562-  }
1563-  else {
1564:    util_execSystem("oal_wlan_ra_setWlanBasicCfg","iwpriv %s set AutoChannelSel=%d",param_1,2);
1565:    pcVar4 = "iwpriv %s set Channel=%d";
1566-LAB_000aecbc:
1567-    uVar3 = 0;
1568-  }
--
1570-LAB_000aecdc:
1571-  iVar2 = strcmp("5GHz",(char *)(param_1 + 1099));
1572-  if (iVar2 == 0) {
1573:    util_execSystem("oal_wlan_ra_setWlanBasicCfg","iwpriv %s set VhtStbc=%d",param_1,0);
1574:    util_execSystem("oal_wlan_ra_setWlanBasicCfg","iwpriv %s set HtStbc=%d",param_1,0);
1575-  }
1576-  FUN_000a856c(auStack_94,param_1 + 0x429);
1577:  util_execSystem("oal_wlan_ra_setWlanBasicCfg","iwpriv %s set SSID=%s",param_1,auStack_94);
1578-  return 0;
1579-}
1580-
--
1582-        }
1583-        iVar1 = strcmp("Up",__s2);
1584-        if (iVar1 == 0) {
1585:          util_execSystem("oal_wlan_ra_updateWlanCfg","iwpriv %s set AccessPolicy=%d",param_1,cVar4)
1586-          ;
1587-        }
1588-        __s2_00 = (char *)(param_1 + 0xb49);
1589-        iVar1 = strcmp((char *)(param_1 + 0xf55),__s2_00);
1590-        if ((iVar1 != 0) && (iVar1 = strcmp("Up",(char *)(param_1 + 0xb7c)), iVar1 == 0)) {
1591:          util_execSystem("oal_wlan_ra_updateWlanCfg","iwpriv %s set AccessPolicy=%d",__s2_00,cVar4)
1592-          ;
1593-        }
1594-        iVar1 = FUN_000a9314(param_1);
--
1596-          iVar1 = strcmp("Up",__s2);
1597-          if (iVar1 == 0) {
1598-            FUN_000a856c(auStack_90,param_1 + 0x429);
1599:            util_execSystem("oal_wlan_ra_updateWlanCfg","iwpriv %s set SSID=%s",param_1,auStack_90);
1600-            if (*(char *)(param_1 + 0xf81) != 'C') {
1601:              util_execSystem("oal_wlan_ra_updateWlanCfg","ifconfig %s down",__s2_00);
1602:              sprintf(acStack_d0,"ifconfig %s down; ",param_1);
1603:              sprintf(acStack_110,"ifconfig %s up; ",param_1);
1604-              iVar1 = curMultimode();
1605---
1606:                  sprintf(acStack_110 + sVar2,"ifconfig %s up","apclii0");
1607-                }
1608-              }
1609-              util_execSystem("oal_wlan_ra_updateWlanCfg",acStack_d0);
--
1619-          iVar1 = strcmp("Up",__s2_01);
1620-          if (iVar1 == 0) {
1621-            FUN_000a856c(auStack_90,param_1 + 0xb59);
1622:            util_execSystem("oal_wlan_ra_initMSSID","iwpriv %s set SSID=%s",__s2_00,auStack_90);
1623-          }
1624-          iVar1 = strcmp("Up",__s2_01);
1625-          if ((iVar1 != 0) ||
--
1627-                  iVar1 = strcmp("Up",__s2);
1628-                  if (iVar1 == 0) {
1629-                    FUN_000a856c(auStack_90,param_1 + 0x429);
1630:                    util_execSystem("oal_wlan_ra_initWlan","iwpriv %s set SSID=%s",param_1,
1631-                                    auStack_90);
1632-                  }
1633-                  iVar1 = FUN_000a9314(param_1);
1634-                  if (iVar1 == 0) {
1635:                    util_execSystem("oal_wlan_ra_initWlan","ifconfig %s up",param_1);
1636-                    iVar1 = strcmp("2.4GHz",pcVar4);
1637-                    if (iVar1 == 0) {
1638-                      pcVar4 = "echo 1 > /proc/tplink/led_wlan_24G";
--
1640-                    else {
1641-                      pcVar4 = "echo 1 > /proc/tplink/led_wlan_5G";
1642-                    }
1643:                    util_execSystem("oal_wlan_ra_initWlan","%s",pcVar4);
1644:                    util_execSystem("oal_wlan_ra_initWlan","iwpriv %s set ed_chk=0",param_1);
1645-                    iVar1 = strcmp("Up",__s2);
1646-                    if (iVar1 == 0) {
1647-                      return 0;
--
1650-    memcpy(auStack_58,"EB_FORWARD_GUEST_5G",0x14);
1651-  }
1652-  util_execSystem("oal_guest_initAccessControl",
1653:                  "ebtables -t broute -I BROUTING -i %s -j mark --or-mark 0x%x --mark-target CONTINUE"
1654-                  ,param_1,param_2);
1655:  util_execSystem("oal_guest_initAccessControl","iptables -N %s",auStack_38);
1656:  util_execSystem("oal_guest_initAccessControl","ebtables -N %s",auStack_58);
1657:  util_execSystem("oal_guest_initAccessControl","iptables -I INPUT -m mark --mark 0x%x/0x%x -j %s ",
1658-                  param_2,param_2,auStack_38);
1659:  util_execSystem("oal_guest_initAccessControl","ebtables -I FORWARD -i %s -j %s",param_1,auStack_58
1660-                 );
1661:  util_execSystem("oal_guest_initAccessControl","iptables -I %s -j DROP ",auStack_38);
1662:  util_execSystem("oal_guest_initAccessControl","iptables -I %s -p udp --dport 53 -j ACCEPT",
1663-                  auStack_38);
1664:  util_execSystem("oal_guest_initAccessControl","iptables -I %s -p udp --dport 67 -j ACCEPT",
1665-                  auStack_38);
1666:  util_execSystem("oal_guest_initAccessControl","ebtables -I %s -j DROP",auStack_58);
1667:  util_execSystem("oal_guest_initAccessControl","iwpriv %s set NoForwardingBTNBSSID=1",param_1);
1668-  return 0;
1669-}
1670-
--
1673-    memcpy(auStack_58,"EB_FORWARD_GUEST_5G",0x14);
1674-  }
1675-  util_execSystem("oal_guest_exitAccessControl",
1676:                  "ebtables -t broute -D BROUTING -i %s -j mark --or-mark 0x%x --mark-target CONTINUE"
1677-                  ,param_1,uVar2);
1678:  util_execSystem("oal_guest_exitAccessControl","iptables -D INPUT -m mark --mark 0x%x/0x%x -j %s ",
1679-                  uVar2,uVar2,auStack_38);
1680:  util_execSystem("oal_guest_exitAccessControl","ebtables -D FORWARD -i %s -j %s",param_1,auStack_58
1681-                 );
1682:  util_execSystem("oal_guest_exitAccessControl","ebtables -F %s",auStack_58);
1683:  util_execSystem("oal_guest_exitAccessControl","iptables -F %s",auStack_38);
1684:  util_execSystem("oal_guest_exitAccessControl","iptables -X %s",auStack_38);
1685:  util_execSystem("oal_guest_exitAccessControl","ebtables -X %s",auStack_58);
1686:  util_execSystem("oal_guest_exitAccessControl","iwpriv %s set NoForwardingBTNBSSID=0",param_1);
1687-  return 0;
1688-}
1689-
--
1692-  }
1693-  if (param_1 == '\x01') {
1694-    util_execSystem();
1695:    util_execSystem("oal_guest_enableLanAccess","ebtables -I %s -j ACCEPT",auStack_30);
1696:    pcVar2 = "iwpriv %s set NoForwardingBTNBSSID=0";
1697-  }
1698-  else {
1699:    util_execSystem("oal_guest_enableLanAccess","ebtables -D %s -j ACCEPT",auStack_30);
1700:    pcVar2 = "iwpriv %s set NoForwardingBTNBSSID=1";
1701-  }
1702-  util_execSystem("oal_guest_enableLanAccess",pcVar2,param_3);
1703-  return 0;
--
1707-    memcpy(auStack_30,"IP_INPUT_GUEST_5G",0x12);
1708-  }
1709-  if (param_1 == '\x01') {
1710:    util_execSystem("oal_guest_enableUSBAccess","iptables -I %s -p tcp --dport 445 -j ACCEPT",
1711-                    auStack_30);
1712:    util_execSystem("oal_guest_enableUSBAccess","iptables -I %s -p tcp --dport 139 -j ACCEPT",
1713-                    auStack_30);
1714:    util_execSystem("oal_guest_enableUSBAccess","iptables -I %s -p udp --dport 138 -j ACCEPT",
1715-                    auStack_30);
1716:    pcVar2 = "iptables -I %s -p udp --dport 137 -j ACCEPT";
1717-  }
1718-  else {
1719:    util_execSystem("oal_guest_enableUSBAccess","iptables -D %s -p tcp --dport 445 -j ACCEPT",
1720-                    auStack_30);
1721:    util_execSystem("oal_guest_enableUSBAccess","iptables -D %s -p tcp --dport 139 -j ACCEPT",
1722-                    auStack_30);
1723:    util_execSystem("oal_guest_enableUSBAccess","iptables -D %s -p udp --dport 138 -j ACCEPT",
1724-                    auStack_30);
1725:    pcVar2 = "iptables -D %s -p udp --dport 137 -j ACCEPT";
1726-  }
1727-  util_execSystem("oal_guest_enableUSBAccess",pcVar2,auStack_30);
1728-  return 0;
--
1732-undefined4 oal_br_addBridge(undefined4 param_1)
1733-
1734-{
1735:  util_execSystem("oal_br_addBridge","brctl addbr %s;brctl setfd %s 0;brctl stp %s off",param_1,
1736-                  param_1,param_1,param_1);
1737-  oal_fw_ebtables(param_1,0);
1738-  oal_ipt_addLanRules(param_1);
--
1740-{
1741-  char *pcVar1;
1742-  
1743:  util_execSystem("oal_br_delBridge","ifconfig %s down;brctl delbr %s",param_1,param_1);
1744-  oal_fw_ebtables(param_1,1);
1745-  pcVar1 = strchr(param_1,0x3a);
1746-  if (pcVar1 == (char *)0x0) {
--
1748-undefined4 oal_br_addIntfIntoBridge(undefined4 param_1,undefined4 param_2)
1749-
1750-{
1751:  util_execSystem("oal_br_addIntfIntoBridge","brctl addif %s %s",param_2,param_1,&_gp_1);
1752-  return 0;
1753-}
1754-
--
1756-undefined4 oal_br_delIntfFromBridge(undefined4 param_1,undefined4 param_2)
1757-
1758-{
1759:  util_execSystem("oal_br_delIntfFromBridge","brctl delif %s %s",param_2,param_1,&_gp_1);
1760-  return 0;
1761-}
1762-
--
1765-{
1766-                    // WARNING: Treating indirect jump as call
1767-  util_execSystem("oal_br_markMulticastRouterPort",
1768:                  "echo 2 > /sys/devices/virtual/net/%s/brport/multicast_router",param_1);
1769-  return;
1770-}
1771---
--
1773-  
1774-  local_214 = param_2 & 0xff;
1775-  util_execSystem("oal_igmp_setForceVersion",
1776:                  "echo %d > /proc/sys/net/ipv4/conf/%s/force_igmp_version",local_214,param_1);
1777-  util_execSystem("oal_igmp_setForceVersion",
1778-                  "for i in /sys/devices/virtual/net/*/bridge/igmp_query_version; do echo %d > $i; done"
1779-                  ,3 - (uint)(local_214 != 0));
--
1795-  if ((*(uint *)(param_1 + 0x20) & 2) != 0) {
1796-    iVar2 = param_1;
1797-  }
1798:  util_execSystem("tc_setSpecialWanItfQdisc","tc filter show dev %s >/var/tc_filters",iVar2);
1799-  if (param_2 == 2) {
1800-    iVar1 = stat("/var/tc_filters",&sStack_b0);
1801-    if ((iVar1 == 0) && (sStack_b0.st_blocks == 0)) {
1802-      return 0;
1803-    }
1804:    util_execSystem("tc_setSpecialWanItfQdisc","tc qdisc del dev %s root handle 10: prio",iVar2);
1805-  }
1806-  else {
1807-    if (param_2 != 1) {
--
1809-    if ((iVar1 == 0) && (0 < sStack_b0.st_blocks)) {
1810-      return 0;
1811-    }
1812:    util_execSystem("tc_setSpecialWanItfQdisc","tc qdisc add dev %s root handle 10: prio",iVar2);
1813-    util_execSystem("tc_setSpecialWanItfQdisc",
1814:                    "tc filter add dev %s parent 10: protocol all prio 1 u32 match u32 0 0 flowid 10:1 action mirred egress redirect dev %s"
1815-                    ,iVar2,&DAT_000da3a4);
1816-  }
1817---
1818-    if (*(char *)(param_1 + 0x10) != '\0') {
1819-      return 0;
1820-    }
1821:    util_execSystem("oal_tc_setSpecialLanItfQdisc","tc filter show dev %s >/var/tc_filters",param_1)
1822-    ;
1823-    iVar1 = stat("/var/tc_filters",&sStack_a8);
1824-    if ((iVar1 == 0) && (sStack_a8.st_blocks == 0)) {
1825-      return 0;
1826-    }
1827:    util_execSystem("oal_tc_setSpecialLanItfQdisc","tc qdisc del dev %s root handle 10: prio",
1828-                    param_1);
1829-  }
1830-  else {
--
1832-    if (*(char *)(param_1 + 0x10) != '\0') {
1833-      return 0;
1834-    }
1835:    util_execSystem("oal_tc_setSpecialLanItfQdisc","tc filter show dev %s >/var/tc_filters",param_1)
1836-    ;
1837-    iVar1 = stat("/var/tc_filters",&sStack_140);
1838-    if ((iVar1 == 0) && (0 < sStack_140.st_blocks)) {
1839-      return 0;
1840-    }
1841:    util_execSystem("oal_tc_setSpecialLanItfQdisc","tc qdisc add dev %s root handle 10: prio",
1842-                    param_1);
1843-    util_execSystem("oal_tc_setSpecialLanItfQdisc",
1844:                    "tc filter add dev %s parent 10: protocol all prio 1 handle 0x%x fw mask 0x%x classid 10:1 action mirred egress redirect dev %s"
1845-                    ,param_1,0x8000,0x8000,&DAT_000da49c);
1846-  }
1847---
--
1849-        uVar2 = 0x41;
1850-      }
1851-      util_execSystem("tc_setEbtablesMarkRuleForIntf",
1852:                      "ebtables -t broute -%c BROUTING -i %s -j mark --or-mark 0x%x",uVar2,param_1,
1853-                      param_2);
1854-      if (param_4 == 1) {
1855---
1856-    }
1857-  }
1858-  else {
1859:    util_execSystem("tc_setMarkRuleBasedOnItf","iptables -%c %s -j MARK --or-mark 0x%x",local_20,
1860-                    auStack_5c,param_2);
1861-  }
1862-  return 0;
--
1864-        else {
1865-          puVar5 = &DAT_000da49c;
1866-        }
1867:        util_execSystem("oal_tc_modifyQdiscOrClass","ifconfig %s up",puVar5);
1868-      }
1869-    }
1870:    util_execSystem("oal_tc_modifyQdiscOrClass","tc %s %s %s %s %s %s",&local_e8,&local_e0,&local_a8
1871-                    ,&local_b8,&local_c8,local_98);
1872-    uVar4 = 0;
1873-    if ((*(int *)(param_1 + 0x10) == 0) && (uVar4 = 0, *(int *)(param_1 + 0xc) == 2)) {
--
1875-      else {
1876-        puVar5 = &DAT_000da49c;
1877-      }
1878:      util_execSystem("oal_tc_modifyQdiscOrClass","ifconfig %s down",puVar5);
1879:      util_execSystem("oal_tc_modifyQdiscOrClass","iptables -F %s",acStack_d8);
1880-      uVar4 = 0;
1881-    }
1882-  }
--
1884-      pcVar4 = "operation(%d) is not supported!\n";
1885-      goto LAB_000b3610;
1886-    }
1887:    util_execSystem("oal_tc_modifyFilter","tc filter %s %s %s %s protocol all %s fw %s %s",&local_80
1888-                    ,&local_38,&local_48,&local_78,&local_68,&local_58,&local_28);
1889-    uVar2 = 0;
1890-  }
--
1892-      sprintf(&local_8c,"--dport %d:%d",uVar1,(uint)param_6);
1893-    }
1894-    if ((param_7 == '\0') || (param_7 == '\x06')) {
1895:      util_execSystem("oal_tc_modifyRule","iptables %s %s %s -p tcp %s -j MARK --set-mark 0x%x",
1896-                      &local_90,"FWD_MARK_LAN",&local_6c,&local_8c,uVar2);
1897:      util_execSystem("oal_tc_modifyRule","iptables %s %s %s -p tcp %s -j RETURN",&local_90,
1898-                      "FWD_MARK_LAN",&local_6c,&local_8c);
1899-      if (param_7 != '\0') goto LAB_000b38a4;
1900-    }
--
1902-LAB_000b38a4:
1903-      if (param_7 != '\x11') goto LAB_000b3918;
1904-    }
1905:    util_execSystem("oal_tc_modifyRule","iptables %s %s %s -p udp %s -j MARK --set-mark 0x%x",
1906-                    &local_90,"FWD_MARK_LAN",&local_6c,&local_8c,uVar2);
1907:    util_execSystem("oal_tc_modifyRule","iptables %s %s %s -p udp %s -j RETURN",&local_90,
1908-                    "FWD_MARK_LAN",&local_6c,&local_8c);
1909-  }
1910-LAB_000b3918:
--
1912-    sprintf(&local_8c,"--sport %d:%d",uVar1,(uint)param_6);
1913-  }
1914-  if ((param_7 == '\0') || (param_7 == '\x06')) {
1915:    util_execSystem("oal_tc_modifyRule","iptables %s %s %s -p tcp %s -j MARK --set-mark 0x%x",
1916-                    &local_90,"FWD_MARK_WAN",&local_6c,&local_8c,uVar2 | 0x8000);
1917:    util_execSystem("oal_tc_modifyRule","iptables %s %s %s -p tcp %s -j RETURN",&local_90,
1918-                    "FWD_MARK_WAN",&local_6c,&local_8c);
1919-    if (param_7 == '\0') goto LAB_000b3a3c;
1920-  }
--
1922-    return 0;
1923-  }
1924-LAB_000b3a3c:
1925:  util_execSystem("oal_tc_modifyRule","iptables %s %s %s -p udp %s -j MARK --set-mark 0x%x",
1926-                  &local_90,"FWD_MARK_WAN",&local_6c,&local_8c,uVar2 | 0x8000);
1927:  util_execSystem("oal_tc_modifyRule","iptables %s %s %s -p udp %s -j RETURN",&local_90,
1928-                  "FWD_MARK_WAN",&local_6c,&local_8c);
1929-  return 0;
1930-}
--
1932-  }
1933-  local_26 = 0;
1934-  if ((param_2 & 2) != 0) {
1935:    util_execSystem("oal_tc_modifyIfnameRule","iptables %s %s -m mark --mark 0x%x/0x%x -j RETURN",
1936-                    &local_28,"FWD_MARK_LAN",param_4,param_4);
1937-    util_execSystem("oal_tc_modifyIfnameRule",
1938:                    "iptables %s %s -m mark --mark 0x%x/0x%x -j MARK --or-mark 0x%x",&local_28,
1939-                    "FWD_MARK_LAN",param_4,param_4,(uint)param_6);
1940-  }
1941-  if ((param_2 & 1) != 0) {
1942-    util_execSystem("oal_tc_modifyIfnameRule",
1943:                    "ebtables %s OUTPUT -o %s -j mark --or-mark 0x%x --mark-target CONTINUE",
1944-                    &local_28,param_3,param_6 | 0x8000);
1945-    util_execSystem("oal_tc_modifyIfnameRule",
1946:                    "ebtables %s OUTPUT -o %s -j mark --mark-and 0x%x --mark-target CONTINUE",
1947-                    &local_28,param_3,0xffffff00);
1948-  }
1949---
--
1971-    fprintf(__stream,dhcp6sAddrCfg,param_1,param_6,acStack_150,acStack_178);
1972-  }
1973-  fclose(__stream);
1974:  util_execSystem("oal_lan6_startDhcp6s","dhcp6s -c %s -P %s %s &",acStack_e8,acStack_128,param_1);
1975-  return 0;
1976-}
1977-
--
1981-    if (0 < local_98) {
1982-      util_execSystem("oal_lan6_stopDhcp6s","kill -9 %d");
1983-    }
1984:    util_execSystem("oal_lan6_stopDhcp6s","rm -f %s %s",acStack_54,acStack_94);
1985-    uVar1 = 0;
1986-  }
1987-  return uVar1;
--
1989-    }
1990-    fprintf(__stream,radvdLastCfg);
1991-    fclose(__stream);
1992:    util_execSystem("oal_lan6_startRadvd","radvd -C %s -p %s &",acStack_d0,acStack_110);
1993-    uVar1 = 0;
1994-  }
1995-  return uVar1;
--
1999-    if (0 < local_98) {
2000-      util_execSystem("oal_lan6_stopRadvd","kill -15 %d");
2001-    }
2002:    util_execSystem("oal_lan6_stopRadvd","rm -f %s %s",acStack_54,acStack_94);
2003-    uVar1 = 0;
2004-  }
2005-  return uVar1;
2006---
2007-  else {
2008:    pcVar1 = "ifconfig %s del %s/%d";
2009-  }
2010-  util_execSystem("oal_lan6_setIntfAddr",pcVar1,param_1,param_2,param_3);
2011-  return 0;
--
2015-void oal_wan6_enableAcceptRa(undefined4 param_1)
2016-
2017-{
2018:  util_execSystem("oal_wan6_enableAcceptRa","echo 2 > /proc/sys/net/ipv6/conf/%s/accept_ra",param_1)
2019-  ;
2020-                    // WARNING: Treating indirect jump as call
2021:  util_execSystem("oal_wan6_enableAcceptRa","echo 0 > /proc/sys/net/ipv6/conf/%s/autoconf",param_1);
2022-  return;
2023-}
2024-
--
2026-
2027-{
2028-                    // WARNING: Treating indirect jump as call
2029:  util_execSystem("oal_wan6_disableAcceptRa","echo 0 > /proc/sys/net/ipv6/conf/%s/accept_ra",param_1
2030-                 );
2031-  return;
2032-}
--
2034-      fprintf(__stream,dhcp6cPDCfg,uVar5,&DAT_000c0a1c,pcVar4,pcVar3,pcVar1,pcVar2);
2035-    }
2036-    fclose(__stream);
2037:    util_execSystem("oal_wan6_startDhcp6c","dhcp6c -c %s -p %s %s %s &",acStack_a0,acStack_e0,
2038-                    param_1,param_2);
2039-  }
2040-  return;
--
2044-    if (0 < local_90) {
2045-      util_execSystem("oal_wan6_stopDhcp6c","kill -s 15 %d");
2046-    }
2047:    util_execSystem("oal_wan6_stopDhcp6c","rm -f %s %s",acStack_4c,acStack_8c);
2048-  }
2049-  return;
2050-}
--
2052-undefined4 oal_wan6_setIpAddr(undefined4 param_1,undefined4 param_2,undefined4 param_3)
2053-
2054-{
2055:  util_execSystem("oal_wan6_setIpAddr","ifconfig %s add %s/%d",param_2,param_1,param_3);
2056-  return 0;
2057-}
2058-
--
2060-undefined4 oal_wan6_delIpAddr(undefined4 param_1,undefined4 param_2,undefined4 param_3)
2061-
2062-{
2063:  util_execSystem("oal_wan6_delIpAddr","ifconfig %s del %s/%d",param_2,param_1,param_3);
2064-  return 0;
2065-}
2066-
--
2068-
2069-{
2070-                    // WARNING: Treating indirect jump as call
2071:  util_execSystem("oal_wan6_enableSlaac","echo 1 > /proc/sys/net/ipv6/conf/%s/autoconf",param_1);
2072-  return;
2073-}
2074-
--
2079-  util_execSystem("oal_setIp6DefaultRoute","route -A inet6 del default");
2080-  if (((*param_1 != '\0') && (*param_2 != '\0')) &&
2081-     (iVar1 = strcmp(param_2,(char *)&DAT_000c3ba8), iVar1 != 0)) {
2082:    util_execSystem("oal_setIp6DefaultRoute","route -A inet6 add default gw %s dev %s",param_2,
2083-                    param_1);
2084-    return 0;
2085-  }
2086:  util_execSystem("oal_setIp6DefaultRoute","echo 1 > /proc/sys/net/ipv6/conf/%s/sendrs ",param_1);
2087-  sleep(1);
2088-  return 0;
2089-}
--
2091-oal_addIp6StaticRoute(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4)
2092-
2093-{
2094:  util_execSystem("oal_addIp6StaticRoute","route -A inet6 add %s/%d gw %s dev %s",param_1,param_2,
2095-                  param_3,param_4,&_gp_1);
2096-  return 0;
2097-}
--
2099-undefined4 oal_delIp6StaticRoute(undefined4 param_1,undefined4 param_2)
2100-
2101-{
2102:  util_execSystem("oal_delIp6StaticRoute","route -A inet6 del %s/%d",param_1,param_2,&_gp_1);
2103-  return 0;
2104-}
2105-
2106---
2107-      pcVar7 = "DROP";
2108-    }
2109:    sprintf(pcVar9,"-j %s",pcVar7);
2110-    util_execSystem("setRule",acStack_238);
2111-    uVar12 = uVar12 + 1;
2112-    if ((*(char *)(param_1 + 0x15) != '\x03') || (2 < (int)uVar12)) {
--
2186-  
2187-  util_execSystem("oal_fw6_setIp6TcpMss","ip6tables -F SETMSS");
2188-  sprintf(acStack_410,
2189:          "ip6tables -A SETMSS -i %s -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --set-mss %d",param_1,
2190-          param_2 + -0x3c);
2191-  util_execSystem("oal_fw6_setIp6TcpMss",acStack_410);
2192-  sprintf(acStack_410,
2193:          "ip6tables -A SETMSS -o %s -p tcp --tcp-flags SYN,RST SYN -j TCPMSS --set-mss %d",param_1,
2194-          param_2 + -0x3c);
2195-  util_execSystem("oal_fw6_setIp6TcpMss",acStack_410);
2196-  return 0;
--
2208-undefined4 oal_dslite_addTunnel(undefined4 param_1,undefined4 param_2)
2209-
2210-{
2211:  util_execSystem("oal_dslite_addTunnel","ip -6 tunnel add dslite mode ip4ip6 remote %s local %s",
2212-                  param_1,param_2);
2213-  util_execSystem("oal_dslite_addTunnel","ifconfig dslite up");
2214-  return 0;
--
2228-{
2229-  util_execSystem("oal_dslite_setRoute","route del default");
2230-  if (param_2 != '\0') {
2231:    util_execSystem("oal_dslite_setRoute","route add default dev %s",param_1);
2232-  }
2233-  return 0;
2234-}
--
2236-                 undefined4 param_5)
2237-
2238-{
2239:  util_execSystem("oal_6rd_addTunnel","ip tunnel add 6rd mode sit local %s ttl 64",param_4);
2240-  util_execSystem("oal_6rd_addTunnel",
2241:                  "ip tunnel 6rd dev 6rd 6rd-prefix %s/%d 6rd-relay_prefix %s/%d",param_1,param_2,
2242-                  param_3,param_5);
2243-  util_execSystem("oal_6rd_addTunnel","ifconfig 6rd up");
2244-  return 0;
--
2258-{
2259-  util_execSystem("oal_6rd_setRoute","route -A inet6 del default");
2260-  if (param_5 != '\0') {
2261:    util_execSystem("oal_6rd_setRoute","route -A inet6 add default gw ::%s dev %s",param_2,param_1);
2262:    util_execSystem("oal_6rd_setRoute","route -A inet6 add %s/%d dev %s",param_3,param_4,param_1);
2263-  }
2264-  return 0;
2265-}
--
2267-undefined4 oal_6to4_addTunnel(undefined4 param_1)
2268-
2269-{
2270:  util_execSystem("oal_6to4_addTunnel","ip tunnel add 6to4 mode sit remote any local %s",param_1);
2271-  util_execSystem("oal_6to4_addTunnel","ifconfig 6to4 up");
2272-  return 0;
2273-}
--
2287-  util_execSystem("oal_6to4_setRoute","route -A inet6 del default");
2288-  if (param_2 != '\0') {
2289-                    // WARNING: Treating indirect jump as call
2290:    util_execSystem("oal_6to4_setRoute","route -A inet6 add default gw ::192.88.99.1 dev %s",param_1
2291-                   );
2292-    return;
2293-  }
--
2295-undefined4 oal_6to4_setIpAddr(undefined4 param_1,undefined4 param_2)
2296-
2297-{
2298:  util_execSystem("oal_6to4_setIpAddr","ifconfig %s add %s",param_2,param_1,&_gp_1);
2299-  return 0;
2300-}
2301-
--
2339-            sVar2 = strlen(__s);
2340-            iVar1 = atoi((char *)(param_1 + sVar2 + 0x1df));
2341-            iVar1 = iVar1 * 0x12 + 2;
2342:            util_execSystem("oal_wan_setL2tpFakeIp","ifconfig %s %s%d",__s,"169.254.113.",iVar1);
2343:            util_execSystem("oal_wan_setL2tpFakeIp","route add default gw %s%d dev %s",
2344-                            "169.254.113.",iVar1,__s);
2345-          }
2346-          else {
2347:            util_execSystem("oal_wan_setL2tpFakeIp","ifconfig %s %s",__s,param_1 + 0x159);
2348:            util_execSystem("oal_wan_setL2tpFakeIp","route add default gw %s dev %s",param_1 + 0x189
2349-                            ,__s);
2350-          }
2351-        }
--
2436-            sVar2 = strlen(__s);
2437-            iVar1 = atoi((char *)(param_1 + sVar2 + 0x1df));
2438-            iVar1 = iVar1 * 0x12 + 2;
2439:            util_execSystem("oal_wan_setPptpFakeIp","ifconfig %s %s%d",__s,"169.254.113.",iVar1);
2440:            util_execSystem("oal_wan_setPptpFakeIp","route add default gw %s%d dev %s",
2441-                            "169.254.113.",iVar1,__s);
2442-          }
2443-          else {
2444:            util_execSystem("oal_wan_setPptpFakeIp","ifconfig %s %s",__s,param_1 + 0x159);
2445:            util_execSystem("oal_wan_setPptpFakeIp","route add default gw %s dev %s",param_1 + 0x189
2446-                            ,__s);
2447-          }
2448-        }
--
2494-}
2495-
2496---
2497:    snprintf(acStack_414 + sVar2,0x400 - sVar2,"traceroute -m %d -q %d -w %d %s %d &",
2498-             *(undefined4 *)(param_1 + 0x28),*(undefined4 *)(param_1 + 0x38),
2499-             *(undefined4 *)(param_1 + 0x34),param_1 + 0x100,*(undefined4 *)(param_1 + 0x30));
2500-    util_execSystem("oal_startTraceRoute",acStack_414);
--
2502-  }
2503-  else {
2504---
2505:  sprintf(acStack_28,"%s.%d",&DAT_000c0a54,param_1);
2506-  iVar1 = oal_intf_ifExist(acStack_28);
2507-  if (iVar1 == 0) {
2508:    util_execSystem("oal_addVlanTagIntf","vconfig add %s %d",&DAT_000c0a54,param_1);
2509-    if (param_2 != 0) {
2510:      util_execSystem("oal_addVlanTagIntf","vconfig set_flag %s 1 1",acStack_28);
2511:      util_execSystem("oal_addVlanTagIntf","vconfig set_egress_map %s 0 %d",acStack_28,param_2);
2512-    }
2513-    oal_intf_enableIntf(acStack_28);
2514-    oal_intf_waitIntfExists(acStack_28);
--
2516-  iVar1 = oal_intf_ifExist(acStack_20);
2517-  if (iVar1 == 1) {
2518-    oal_intf_disableIntf(acStack_20);
2519:    util_execSystem("oal_delVlanTagIntf","vconfig rem %s.%d",&DAT_000c0a54,param_1);
2520-  }
2521-  return 0;
2522-}
2523---
2524-  local_10 = param_1;
2525-  memset(acStack_210,0,0x200);
2526:  snprintf(acStack_210,0x200,"ip link add link %s name %s type macvlan",local_10,param_2);
2527-  util_execSystem("oal_vlan_createMacVlanIntf",acStack_210);
2528-  oal_intf_waitIntfExists(param_2);
2529-  FUN_000b9c00(1,param_2);
